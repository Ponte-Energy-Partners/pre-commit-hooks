


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = false
version = "1.1.2"
version_files = [
    "pyproject.toml"
]
changelog_incremental = true
changelog_start_rev = "1179d2ca8ba8f989b93f24443acc118d55de3b4c"






[tool.poetry]
name = "pep-pre-commit-hooks"
version = "1.1.2"
description = "Public pre-commit hooks"
authors = ["Lorenz Walthert <lorenz.walthert@icloud.com>"]
readme = "README.md"
packages = [
    {include = "pep_pre_commit_hooks"}
]

[tool.poetry.dependencies]
python = ">=3.13.0"
typer = "^0.19.2"

[tool.poetry.scripts]
verify-git-email = "pep_pre_commit_hooks.verify_git_email:app"


[tool.poetry.group.dev.dependencies]
commitizen = "^3.0.0"
black = "^24.3.0"
ruff = "^0.0.254"
pytest = "^8.0.0"
pytest-cov = "^4.0.0"
mypy = "^1.15.0"


[tool.ruff]
line-length = 120

# https://beta.ruff.rs/docs/rules/
select = [
    "F", # Pyflakes
    "E", # pycodestyle
    "W", # pycodestyle
    "C90", # mccabe
    "I", # isort
    "N", # pep8-naming
    "D", # pydocstyle
    "UP", # pyupgrade
    "YTT", # flake8-2020
    "ANN", # flake8-annotations
    "S", # flake8-bandit
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "COM", # flake8-commas
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "DJ", # flake8-django
    "EM", # flake8-errmsg
    "EXE", # flake8-executable
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "G", # flake8-logging-format
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT", # flake8-pytest-style
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PD", # pandas-vet
    "PGH", # pygrep-hooks
    "PL", # Pylint
    "TRY", # tryceratops
    "NPY", # NumPy-specific rules
    "RUF", # Ruff-specific rules
]
ignore = [
    "D203", # one-blank-line-before-class
    "D213", # multi-line-summary-second-line
]

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.isort]
combine-as-imports = false
force-wrap-aliases = true

[tool.ruff.per-file-ignores]
"tests/*" = [
    "ANN", # flake8-annotations
    "D", # pydocstyle
    "PLR0912", # too-many-branches
    "PLR0913", # too-many-arguments
    "PLR0915", # too-many-statements
    "S101", # assert
    "SLF001", # private-member-access
    "T201", # print-found
]

[tool.mypy]

files = "pep_pre_commit_hooks"
disallow_incomplete_defs = true
disallow_untyped_defs = true
exclude = [
    "^tests\\/.*$",
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

